{{ 'page--product.css' | asset_url | stylesheet_tag }}

{% assign add_to_cart = 'Add to cart' %}
{% assign sold_out = 'Sold Out' %}
{% assign unavailable = 'Unavailable' %}

<div class="single-product" itemscope itemtype="http://schema.org/Product">
  
  <meta itemprop="url" content="{{ shop.url }}{{ product.url }}" />
  <meta itemprop="image" content="{{ product | img_url: 'grande' }}" />
  
  <form action="/cart/add" method="post" enctype="multipart/form-data">
      
      <div class="left">
        <div class="product-swiper swiper">
          <div class="swiper-wrapper">
            {% for image in product.images %}
              <div class="swiper-slide" style="background: url('{{ image | image_url: width: 2000 }}'); background-size: cover; background-position: center center;"></div>
            {% endfor %}
          </div>
          <div class="swiper-pagination"></div>
        </div>
      </div>

      <div class="right">

        <div class="category">
            {{ product.type }}
        </div>
        <div class="title">
          <h1>{{ product.title }}</h1>
        </div>
        <div class="description" itemprop="description">
          {{ product.description }}
        </div>

        {% render 'product--variant-radios', product: product %}

        <div class="actions">
          <div class="price">
            {% if product.price_varies %}
              {{ product.price_min | money_without_trailing_zeros }}
            {% else %}
              {{ product.price | money_without_trailing_zeros }}
            {% endif %}
          </div>
          <div id="product-add">
            {% if product.selected_or_first_available_variant.available %}
              <input type="submit" name="add" id="add" value="{{ add_to_cart | escape }}">
            {% else %}
            sold out
            {% endif %}
          </div>
        </div>

        <div class="size-chart-link">
          {% render 'icon--size-chart' %} size chart 
        </div>

      </div> 
  </form>

</div>

<div class="size-chart-overlay">
  <div class="size-chart-modal">
    <span class="close-size-chart">&times;</span>
    size chart
  </div>
</div>

<script>
  const swiper = new Swiper('.product-swiper', {
    direction: 'horizontal',
    loop: true,
    autoplay: true,
    pagination: {
      el: '.swiper-pagination',
      clickable: true
    },
    navigation: {
      nextEl: '.swiper-button-next',
      prevEl: '.swiper-button-prev',
    }
  });
</script>

<script>
    
  var selectCallback = function(variant, selector) {

    if (variant) {
      
      // Swap image.
      if (variant.featured_image) {
        var newImage = variant.featured_image; // New image object.
        var mainImageDomEl = jQuery('.product-photo-container img')[0]; // DOM element of main image we need to swap.
        Shopify.Image.switchImage(newImage, mainImageDomEl, switchImage); // Define switchImage (the callback) in your theme's JavaScript file.
      }
      
      // Selected a valid variant that is available.
      if (variant.available) {
            
        // Enabling add to cart button.
        jQuery('#add').removeClass('disabled').prop('disabled', false).val({{ add_to_cart | json }});
      
        // If item is backordered yet can still be ordered, we'll show special message.
        if (variant.inventory_management && variant.inventory_quantity <= 0) {
          jQuery('#selected-variant').html({{ product.title | json }}{% unless hide_default_title %} + ' - ' + variant.title{% endunless %});
          jQuery('#backorder').removeClass("hidden");
        } else {
          jQuery('#backorder').addClass("hidden");
        }
        
      } else {
        // Variant is sold out.
        jQuery('#backorder').addClass('hidden');
        jQuery('#add').val({{ sold_out | json }}).addClass('disabled').prop('disabled', true);       
      }
      
      // Whether the variant is in stock or not, we can update the price and compare at price.
      if ( variant.compare_at_price > variant.price ) {
        jQuery('#product-price').html('<span class="product-price on-sale">'+ Shopify.formatMoney(variant.price, "{{ shop.money_format }}") +'</span>'+'&nbsp;<s class="product-compare-price">'+Shopify.formatMoney(variant.compare_at_price, "{{ shop.money_format }}")+ '</s>');
      } else {
        jQuery('#product-price').html('<span class="product-price">'+ Shopify.formatMoney(variant.price, "{{ shop.money_format }}") + '</span>' );
      }        

    } else {
      // variant doesn't exist.
      jQuery('#product-price').empty();
      jQuery('#backorder').addClass('hidden');
      jQuery('#add').val({{ unavailable | json }}).addClass('disabled').prop('disabled', true);
    }

  };
    
  jQuery(function($) {

    new Shopify.OptionSelectors('product-select', { product: {{ product | json }}, onVariantSelected: selectCallback, enableHistoryState: true });
    
    // Add label if only one product option and it isn't 'Title'.
    {% if product.options.size == 1 and product.options.first != 'Title' %}
      $('.selector-wrapper:eq(0)').prepend('<label>{{ product.options.first }}</label>');
    {% endif %}

  });

  Shopify.Image.preload({{ product.images | json }}, 'grande');
  Shopify.Image.preload({{ product.images | json }}, '1024x1024');

</script>